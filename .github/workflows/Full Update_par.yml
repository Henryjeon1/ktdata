name: Full Update_par

on:
  workflow_dispatch:  # 수동 실행 가능

jobs:
  update-data:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: write

    steps:
      - name: 저장소 체크아웃
        uses: actions/checkout@v3

      - name: Python 설정
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: 필요한 패키지 설치
        run: pip install pandas pyarrow requests pymysql jq

      - name: Run KBO 데이터 생성
        run: python KBO_generate_data_par.py
        env:
          PW: ${{ secrets.PW }}

      - name: Release에 데이터 업로드
        run: |
          TAG_NAME="KoreaBaseballOrganization"
          GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}

          API_URL="https://api.github.com/repos/${{ github.repository }}/releases"
          RELEASE_EXISTS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "$API_URL/tags/${TAG_NAME}")

          if [[ "$RELEASE_EXISTS" == *"Not Found"* ]]; then
            echo "🔄 릴리스가 존재하지 않음. 새로 생성합니다."
          else
            echo "🧹 기존 릴리스를 삭제합니다."
            RELEASE_ID=$(echo "$RELEASE_EXISTS" | jq -r '.id')
            curl -s -X DELETE -H "Authorization: token $GITHUB_TOKEN" \
              "$API_URL/$RELEASE_ID"
          fi

          echo "🚀 새로운 릴리스를 생성합니다."
          RELEASE_RESPONSE=$(curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -d "{\"tag_name\": \"${TAG_NAME}\", \"name\": \"${TAG_NAME}\", \"body\": \"업데이트된 릴리스입니다.\"}" \
            "$API_URL")

          FILE_PATH="KoreaBaseballOrganization.parquet"
          UPLOAD_URL=$(echo "$RELEASE_RESPONSE" | jq -r '.upload_url' | sed -e "s/{?name,label}//")

          if [[ "$UPLOAD_URL" == "null" || -z "$UPLOAD_URL" ]]; then
            echo "❌ 업로드 URL을 가져오지 못했습니다."
            exit 1
          fi

          echo "🔗 업로드 URL: $UPLOAD_URL"

          curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -H "Content-Type: application/octet-stream" \
            --upload-file "${FILE_PATH}" \
            "${UPLOAD_URL}?name=$(basename ${FILE_PATH})"

          echo "✅ 파일 업로드 완료!"

      - name: Minor 데이터 워크플로우 트리거
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/Update_minor.yml/dispatches \
            -d '{
              "ref": "main",
              "inputs": {
                "pw": "'"${{ inputs.pw }}"'"
              }
            }'
