# This is a basic workflow to help you get started with Actions

name: Full Update_par

on:
  workflow_dispatch:  # 수동 실행 가능
    inputs:
      pw:
        description: "데이터베이스 비밀번호"
        required: true
        type: string  # 입력 타입을 문자열로 설정

jobs:
  update-data:
    runs-on: ubuntu-latest
    timeout-minutes: 60  # 실행 시간 제한을 60분으로 설정
    permissions:
      contents: write

    steps:
      - name: 저장소 체크아웃
        uses: actions/checkout@v3

      - name: Python 설정
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: 필요한 패키지 설치
        run: pip install pandas pyarrow requests pymysql jq
      
      - name: Run KBO 데이터 생성
        run: python KBO_generate_data_par.py
        env:
          PW: ${{ inputs.pw }}

      - name: Run Minor 데이터 생성
        run: python Minor_generate_data_par.py
        env:
          PW: ${{ inputs.pw }}


      - name: Release에 두 파일 업로드
        run: |
          TAG_NAME="KoreaBaseballOrganization"
          GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}

          API_URL="https://api.github.com/repos/${{ github.repository }}/releases"
          RELEASE_EXISTS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "$API_URL/tags/${TAG_NAME}")
          
          if [[ "$RELEASE_EXISTS" == *"Not Found"* ]]; then
            echo "🔄 릴리스가 존재하지 않음. 새로 생성합니다."
          else
            echo "🧹 기존 릴리스를 삭제합니다."
            RELEASE_ID=$(echo "$RELEASE_EXISTS" | jq -r '.id')
            curl -s -X DELETE -H "Authorization: token $GITHUB_TOKEN" \
              "$API_URL/$RELEASE_ID"
          fi

          echo "🚀 새로운 릴리스를 생성합니다."
          RELEASE_RESPONSE=$(curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -d "{\"tag_name\": \"${TAG_NAME}\", \"name\": \"${TAG_NAME}\", \"body\": \"업데이트된 릴리스입니다.\"}" \
            "$API_URL")

          UPLOAD_URL=$(echo "$RELEASE_RESPONSE" | jq -r '.upload_url' | sed -e "s/{?name,label}//")

          for FILE_PATH in "KoreaBaseballOrganization.parquet" "Minor.parquet"
          do
            echo "📤 ${FILE_PATH} 업로드 중..."
            curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
              -H "Content-Type: application/octet-stream" \
              --upload-file "${FILE_PATH}" \
              "${UPLOAD_URL}?name=$(basename ${FILE_PATH})"
          done

          echo "✅ 모든 파일 업로드 완료!"
