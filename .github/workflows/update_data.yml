# This is a basic workflow to help you get started with Actions

name: Update Data Daily

on:
  schedule:
    - cron: "0 5 * * *"  # 매일 00:00 UTC에 실행 (한국 시간 오전 9시)
  workflow_dispatch:  # 수동 실행 가능


jobs:
  update-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 저장소 체크아웃
        uses: actions/checkout@v3

      - name: Python 설정
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: 필요한 패키지 설치
        run: pip install pandas pyarrow requests pymysql

      - name: 데이터 생성 실행
        run: python generate_data.py

      - name: Release에 데이터 업로드
        run: |
          TAG_NAME=$(date +'%Y-%m-%d')  # 오늘 날짜를 태그로 사용
          GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          API_URL="https://api.github.com/repos/${{ github.repository }}/releases/tags/${TAG_NAME}"

          # 릴리스가 이미 존재하는지 확인
          RELEASE_EXISTS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" $API_URL)

          if [[ "$RELEASE_EXISTS" == *"Not Found"* ]]; then
            echo "새로운 릴리스를 생성합니다."
            # 릴리스가 없으면 새로운 릴리스 생성
            curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -d "{\"tag_name\": \"${TAG_NAME}\", \"name\": \"${TAG_NAME}\", \"body\": \"릴리스 내용\"}" \
            "https://api.github.com/repos/${{ github.repository }}/releases"
          else
            echo "기존 릴리스를 업데이트합니다."
            # 릴리스가 있으면 업데이트 (예: 릴리스의 이름과 내용을 변경)
            curl -X PATCH -H "Authorization: token $GITHUB_TOKEN" \
            -d "{\"name\": \"${TAG_NAME}\", \"body\": \"업데이트된 내용\"}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/${TAG_NAME}"
          fi
